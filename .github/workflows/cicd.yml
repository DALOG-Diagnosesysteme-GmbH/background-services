name: CICD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOTNET_VERSION: "9.0.x"
  SOLUTION_PATH: "src/Dalog.Foundation.BackgroundServices.sln"
  PROJECT_PATH: "src/Dalog.Foundation.BackgroundServices/Dalog.Foundation.BackgroundServices.csproj"
  NUGET_SOURCE: "https://api.nuget.org/v3/index.json"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v4.1.0
        with:
          versionSpec: "6.x"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v4.1.0

      - name: Set Package Version
        id: package-version
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ] && [ "${{ github.event_name }}" = "push" ]; then
            echo "version=${{ steps.gitversion.outputs.majorMinorPatch }}" >> $GITHUB_OUTPUT
            echo "is-prerelease=false" >> $GITHUB_OUTPUT
          else
            echo "version=${{ steps.gitversion.outputs.fullSemVer }}" >> $GITHUB_OUTPUT
            echo "is-prerelease=true" >> $GITHUB_OUTPUT
          fi

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build solution
        run: dotnet build ${{ env.SOLUTION_PATH }} --no-restore --configuration Release

      - name: Run tests
        run: dotnet test ${{ env.SOLUTION_PATH }} --no-build --configuration Release --verbosity normal

      - name: Pack NuGet package
        run: |
          dotnet pack ${{ env.PROJECT_PATH }} \
            --no-build \
            --configuration Release \
            --output ./artifacts \
            -p:PackageVersion=${{ steps.package-version.outputs.version }} \
            -p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemVer }} \
            -p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }}

      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget-package
          path: ./artifacts/*.nupkg

      - name: Publish to NuGet
        run: |
          dotnet nuget push ./artifacts/*.nupkg \
            --source ${{ env.NUGET_SOURCE }} \
            --api-key ${{ secrets.NUGET_API_KEY }} \
            --skip-duplicate \
            --no-symbols

      - name: Create GitHub Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package-version.outputs.version }}
          release_name: Release v${{ steps.package-version.outputs.version }}
          draft: false
          prerelease: false
          body: |
            ## Changes

            Automated release v${{ steps.package-version.outputs.version }}

            ### NuGet Package

            This release is available on NuGet:
            ```
            dotnet add package Dalog.Foundation.BackgroundServices --version ${{ steps.package-version.outputs.version }}
            ```
